# Default values for autogpt-notification-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # All backend services use the same autogpt-server image with different entry points
  # Override with your registry: e.g., [GCP_REGION]-docker.pkg.dev/[YOUR_PROJECT]/autogpt/autogpt-server
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "autogpt-notification"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8007

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  PYRO_HOST: "0.0.0.0"
  RABBITMQ_HOST: "rabbitmq.autogpt.svc.cluster.local"
  RABBITMQ_PORT: "5672"
  RABBITMQ_DEFAULT_USER: "autogpt"
  RABBITMQ_DEFAULT_PASS: "oBpLPVBQflJf5tCG"
  REDIS_HOST: "redis-master.autogpt.svc.cluster.local"
  REDIS_PASSWORD: "autogpt-redis-password"
  AGENTSERVER_HOST: "autogpt-server.autogpt.svc.cluster.local"
  SCHEDULER_HOST: "autogpt-scheduler.autogpt.svc.cluster.local"
  DATABASEMANAGER_HOST: "autogpt-database-manager.autogpt.svc.cluster.local"
  EXECUTIONMANAGER_HOST: "autogpt-server-executor.autogpt.svc.cluster.local"
  WEBSOCKET_HOST: "autogpt-websocket.autogpt.svc.cluster.local"