apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.fullname" . }}-auth
  labels:
    app.kubernetes.io/name: {{ include "supabase.name" . }}-auth
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: auth
spec:
  replicas: {{ .Values.auth.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "supabase.name" . }}-auth
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "supabase.name" . }}-auth
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: auth
    spec:
      {{- with .Values.auth.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.auth.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: gotrue
        image: "{{ .Values.auth.image.repository }}:{{ .Values.auth.image.tag }}"
        imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
        ports:
        - containerPort: 9999
          name: http
        env:
        - name: GOTRUE_API_HOST
          value: "0.0.0.0"
        - name: GOTRUE_API_PORT
          value: "9999"
        - name: API_EXTERNAL_URL
          value: {{ .Values.auth.environment.API_EXTERNAL_URL | quote }}
        - name: GOTRUE_DB_DRIVER
          value: "postgres"
        - name: GOTRUE_DB_DATABASE_URL
          value: "postgresql://{{ .Values.auth.environment.DB_USER }}:supabase123@{{ .Values.auth.environment.DB_HOST }}:5432/{{ .Values.auth.environment.DB_NAME }}?sslmode=disable&search_path={{ .Values.auth.environment.DB_NAMESPACE }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.db.secretRef }}
              key: {{ .Values.secret.db.secretRefKey.password }}
        - name: GOTRUE_SITE_URL
          value: {{ .Values.auth.environment.GOTRUE_SITE_URL | quote }}
        - name: GOTRUE_URI_ALLOW_LIST
          value: {{ .Values.auth.environment.GOTRUE_URI_ALLOW_LIST | default "*" | quote }}
        - name: GOTRUE_DISABLE_SIGNUP
          value: {{ .Values.auth.environment.GOTRUE_DISABLE_SIGNUP | default "false" | quote }}
        - name: GOTRUE_JWT_ADMIN_ROLES
          value: "service_role"
        - name: GOTRUE_JWT_AUD
          value: "authenticated"
        - name: GOTRUE_JWT_DEFAULT_GROUP_NAME
          value: "authenticated"
        - name: GOTRUE_JWT_EXP
          value: {{ .Values.auth.environment.GOTRUE_JWT_EXP | default "3600" | quote }}
        - name: GOTRUE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.jwt.secretRef | quote }}
              key: {{ .Values.secret.jwt.secretRefKey.secret | quote }}
        - name: GOTRUE_EXTERNAL_EMAIL_ENABLED
          value: {{ .Values.auth.environment.GOTRUE_EXTERNAL_EMAIL_ENABLED | default "true" | quote }}
        - name: GOTRUE_MAILER_AUTOCONFIRM
          value: {{ .Values.auth.environment.GOTRUE_MAILER_AUTOCONFIRM | default "false" | quote }}
        {{- if .Values.auth.smtp.enabled }}
        - name: GOTRUE_SMTP_HOST
          value: {{ .Values.auth.environment.GOTRUE_SMTP_HOST }}
        - name: GOTRUE_SMTP_PORT
          value: {{ .Values.auth.environment.GOTRUE_SMTP_PORT | quote }}
        - name: GOTRUE_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.smtp.secretRef }}
              key: {{ .Values.secret.smtp.secretRefKey.username }}
        - name: GOTRUE_SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.smtp.secretRef }}
              key: {{ .Values.secret.smtp.secretRefKey.password }}
        - name: GOTRUE_SMTP_SENDER_NAME
          value: {{ .Values.auth.environment.GOTRUE_SMTP_SENDER_NAME }}
        - name: GOTRUE_MAILER_URLPATHS_INVITE
          value: "/auth/v1/verify"
        - name: GOTRUE_MAILER_URLPATHS_CONFIRMATION
          value: "/auth/v1/verify"
        - name: GOTRUE_MAILER_URLPATHS_RECOVERY
          value: "/auth/v1/verify"
        - name: GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE
          value: "/auth/v1/verify"
        {{- end }}
        - name: GOTRUE_EXTERNAL_PHONE_ENABLED
          value: "false"
        - name: GOTRUE_SMS_AUTOCONFIRM
          value: "false"
        {{- if .Values.auth.environment.GOTRUE_EXTERNAL_GOOGLE_ENABLED }}
        - name: GOTRUE_EXTERNAL_GOOGLE_ENABLED
          value: {{ .Values.auth.environment.GOTRUE_EXTERNAL_GOOGLE_ENABLED | quote }}
        - name: GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: "autogpt-server-shared-secrets"
              key: "GOOGLE_CLIENT_ID"
        - name: GOTRUE_EXTERNAL_GOOGLE_SECRET
          valueFrom:
            secretKeyRef:
              name: "autogpt-server-shared-secrets"
              key: "GOOGLE_CLIENT_SECRET"
        - name: GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI
          value: {{ .Values.auth.environment.GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI }}
        {{- end }}
        {{- range $key, $value := .Values.auth.extraEnv }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.auth.resources | nindent 12 }}
      initContainers:
      - name: init-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z {{ .Values.auth.environment.DB_HOST }} 5432; do echo waiting for db; sleep 2; done']